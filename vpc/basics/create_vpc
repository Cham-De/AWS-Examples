#!/bin/bash

set -e 

#Create a VPC

VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--region ap-south-1 \
--tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=MyVpc01}]' \
--query Vpc.VpcId \
--output text)

echo "VPC id : $VPC_ID"

#Enable DNS hostnames

aws ec2 modify-vpc-attribute \
--vpc-id "$VPC_ID" \
--enable-dns-hostnames "{\"Value\":true}"

#Create an IGW 

IGW_ID=$(aws ec2 create-internet-gateway \
--tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value=MyIgw01}]' \
--query InternetGateway.InternetGatewayId \
--output text)

echo "IGW id : $IGW_ID"

#Attach the IGW to VPC

aws ec2 attach-internet-gateway \
--internet-gateway-id "$IGW_ID" \
--vpc-id "$VPC_ID"

#Create a new subnet

SUBNET_01_ID=$(aws ec2 create-subnet \
--vpc-id "$VPC_ID" \
--tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=MySubnet01}]' \
--cidr-block "172.1.0.0/24" \
--query Subnet.SubnetId \
--output text)

echo "subnet id : $SUBNET_01_ID"

#Auto assign IPV4 addresses

aws ec2 modify-subnet-attribute \
--subnet-id "$SUBNET_01_ID" \
--map-public-ip-on-launch

#Explicitly associate a subnet

RT_TB_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" \
--query RouteTables[*].RouteTableId \
--output text)

echo "route table id : $RT_TB_ID"

aws ec2 associate-route-table \
--route-table-id "$RT_TB_ID" \
--subnet-id "$SUBNET_01_ID"

#Add a route for the IGW

aws ec2 create-route \
--route-table-id "$RT_TB_ID" \
--destination-cidr-block 0.0.0.0/0 \
--gateway-id "$IGW_ID"